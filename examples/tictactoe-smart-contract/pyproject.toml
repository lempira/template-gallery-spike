[tool.poetry]
name = "Python Smart Contract Example"
version = "0.1.0"
description = "Algorand smart contracts"
authors = [
    "Your Name <your@email.tld>",
]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
algokit-utils = "^2.6.0"
python-dotenv = "^1.0.0"
algorand-python = "^2.1.0"
algorand-python-testing = "^0.4.0"

[tool.poetry.group.dev.dependencies]
algokit-client-generator = "^1.1.3"
mypy = "1.11.0"
puyapy = "*"

[tool.poetry.group.dev.dependencies.black]
extras = [
    "d",
]
version = "*"

[tool.mypy]
files = "smart_contracts/"
python_version = "3.12"
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
extra_checks = true
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true
untyped_calls_exclude = [
    "algosdk",
]
overrides = [
    { module = "tests.*", disallow_any_expr = false },
]

[build-system]
requires = [
    "poetry-core",
]
build-backend = "poetry.core.masonry.api"
